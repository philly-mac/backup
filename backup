#!/usr/bin/env ruby

APP_ROOT = "#{File.dirname(File.expand_path(__FILE__))}/.."
$: << APP_ROOT

require 'config/simple_config'

AppConfig = SimpleConfig.for(:application)

require 'fileutils'

require 'providers/files'
require 'providers/mongodb'
require 'providers/mysql'
require 'providers/postgresql'
require 'providers/redis'
require 'providers/log'
require 'providers/archive'
require 'providers/time'

module Backup
  class Backup

    def self.run(backup_type)
      AppConfig.backup_type = backup_type

      path = AppConfig.destinations.send(:backup_type)

      Backup::Providers::Log.create

      unless File.exist?(path)
        Backup::Providers::Log.log("Creating directory #{path}")
        FileUtils.mkdir_p(path)
      end

      if File.exist?(path)
        Backup::Providers::Log.log("Removing directory #{path}")
        FileUtils.rm_rf(path)
      end

      providers.each(&:dump)

      Backup::Providers::Archive.pack
      Backup::Providers::AmazonS3.transfer
    end

    def self.providers
      [
        Backup::Providers::Files,
        Backup::Providers::MongoDB,
        Backup::Providers::MySQL,
        Backup::Providers::Postgresql,
        Backup::Providers::Rdis,
      ]
    end

    def self.full?
      AppConfig.destinations.send(:backup_type) == 'full'
    end

    def self.incremental?
      AppConfig.destinations.send(:backup_type) == 'incremental'
    end

  end
end

backup_type = ARGV.first

if !backup_type
  puts "No Backup type specified"
  exit 1
end

if !%w{full incremental}.include?(backup_type)
  puts "Unknow backup type specified: #{backup_type}"
  exit 1
end

Backup::Backup.run(backup_type)